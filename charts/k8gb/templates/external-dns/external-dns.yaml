---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-dns
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get","watch","list"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list"]
- apiGroups: ["externaldns.k8s.io"]
  resources: ["dnsendpoints"]
  verbs: ["get","watch","list"]
- apiGroups: ["externaldns.k8s.io"]
  resources: ["dnsendpoints/status"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: {{ .Release.Namespace }}
{{ if .Values.route53.enabled }}
  annotations:
    eks.amazonaws.com/role-arn: {{ .Values.route53.irsaRole }}
{{ end }}
imagePullSecrets: {{ toYaml .Values.global.imagePullSecrets | nindent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: {{ .Release.Namespace }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: {{ .Values.externaldns.image }}
        args:
        - --source=crd
        - --provider=coredns
        - --log-level=debug # debug only
        - --registry=noop # disable local external-dns ownership, see https://github.com/kubernetes-sigs/external-dns/issues/1414
        - --annotation-filter=k8gb.absa.oss/dnstype=local # filter out only relevant DNSEntrypoints
        - --interval={{ .Values.externaldns.interval | default "20s"}} # perform synchronization more frequently than default 1m for faster load balancing
        env:
        - name: ETCD_URLS
          value: http://etcd-cluster-client:2379
        resources:
          requests:
            memory: "32Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        securityContext:
          #runAsUser: 1000
          runAsNonRoot: true
          readOnlyRootFilesystem: true
