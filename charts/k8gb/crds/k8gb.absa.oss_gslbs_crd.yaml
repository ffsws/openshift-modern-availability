apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: gslbs.k8gb.absa.oss
spec:
  group: k8gb.absa.oss
  names:
    kind: Gslb
    listKind: GslbList
    plural: gslbs
    singular: gslb
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Gslb is the Schema for the gslbs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: GslbSpec defines the desired state of Gslb
          properties:
            ingress:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "operator-sdk generate k8s" to regenerate code after
                modifying this file Add custom validation using kubebuilder tags:
                https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              properties:
                backend:
                  description: A default backend capable of servicing requests that
                    don't match any rule. At least one of 'backend' or 'rules' must
                    be specified. This field is optional to allow the loadbalancer
                    controller or defaulting logic to specify a global default.
                  properties:
                    serviceName:
                      description: Specifies the name of the referenced service.
                      type: string
                    servicePort:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Specifies the port of the referenced service.
                      x-kubernetes-int-or-string: true
                  required:
                  - serviceName
                  - servicePort
                  type: object
                rules:
                  description: A list of host rules used to configure the Ingress.
                    If unspecified, or no rule matches, all traffic is sent to the
                    default backend.
                  items:
                    description: IngressRule represents the rules mapping the paths
                      under a specified host to the related backend services. Incoming
                      requests are first evaluated for a host match, then routed to
                      the backend associated with the matching IngressRuleValue.
                    properties:
                      host:
                        description: "Host is the fully qualified domain name of a
                          network host, as defined by RFC 3986. Note the following
                          deviations from the \"host\" part of the URI as defined
                          in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue
                          can only apply to the \t  IP in the Spec of the parent Ingress.
                          2. The `:` delimiter is not respected because ports are
                          not allowed. \t  Currently the port of an Ingress is implicitly
                          :80 for http and \t  :443 for https. Both these may change
                          in the future. Incoming requests are matched against the
                          host before the IngressRuleValue. If the host is unspecified,
                          the Ingress routes all traffic based on the specified IngressRuleValue."
                        type: string
                      http:
                        description: 'HTTPIngressRuleValue is a list of http selectors
                          pointing to backends. In the example: http://<host>/<path>?<searchpart>
                          -> backend where where parts of the url correspond to RFC
                          3986, this resource will be used to match against everything
                          after the last ''/'' and before the first ''?'' or ''#''.'
                        properties:
                          paths:
                            description: A collection of paths that map requests to
                              backends.
                            items:
                              description: HTTPIngressPath associates a path regex
                                with a backend. Incoming urls matching the path are
                                forwarded to the backend.
                              properties:
                                backend:
                                  description: Backend defines the referenced service
                                    endpoint to which the traffic will be forwarded
                                    to.
                                  properties:
                                    serviceName:
                                      description: Specifies the name of the referenced
                                        service.
                                      type: string
                                    servicePort:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the port of the referenced
                                        service.
                                      x-kubernetes-int-or-string: true
                                  required:
                                  - serviceName
                                  - servicePort
                                  type: object
                                path:
                                  description: Path is an extended POSIX regex as
                                    defined by IEEE Std 1003.1, (i.e this follows
                                    the egrep/unix syntax, not the perl syntax) matched
                                    against the path of an incoming request. Currently
                                    it can contain characters disallowed from the
                                    conventional "path" part of a URL as defined by
                                    RFC 3986. Paths must begin with a '/'. If unspecified,
                                    the path defaults to a catch all sending traffic
                                    to the backend.
                                  type: string
                              required:
                              - backend
                              type: object
                            type: array
                        required:
                        - paths
                        type: object
                    type: object
                  type: array
                tls:
                  description: TLS configuration. Currently the Ingress only supports
                    a single TLS port, 443. If multiple members of this list specify
                    different hosts, they will be multiplexed on the same port according
                    to the hostname specified through the SNI TLS extension, if the
                    ingress controller fulfilling the ingress supports SNI.
                  items:
                    description: IngressTLS describes the transport layer security
                      associated with an Ingress.
                    properties:
                      hosts:
                        description: Hosts are a list of hosts included in the TLS
                          certificate. The values in this list must match the name/s
                          used in the tlsSecret. Defaults to the wildcard host setting
                          for the loadbalancer controller fulfilling this Ingress,
                          if left unspecified.
                        items:
                          type: string
                        type: array
                      secretName:
                        description: SecretName is the name of the secret used to
                          terminate SSL traffic on 443. Field is left optional to
                          allow SSL routing based on SNI hostname alone. If the SNI
                          host in a listener conflicts with the "Host" header field
                          used by an IngressRule, the SNI host is used for termination
                          and value of the Host header is used for routing.
                        type: string
                    type: object
                  type: array
              type: object
            strategy:
              description: Strategy defines Gslb behavior
              properties:
                dnsTtlSeconds:
                  description: Defines DNS record TTL in seconds
                  type: integer
                primaryGeoTag:
                  type: string
                splitBrainThresholdSeconds:
                  description: Split brain TXT record expiration in seconds
                  type: integer
                type:
                  type: string
              required:
              - type
              type: object
          required:
          - ingress
          - strategy
          type: object
        status:
          description: GslbStatus defines the observed state of Gslb
          properties:
            geoTag:
              description: cluster Geo Tag to help determine where the operator runs
              type: string
            healthyRecords:
              additionalProperties:
                items:
                  type: string
                type: array
              type: object
            serviceHealth:
              additionalProperties:
                type: string
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              type: object
          required:
          - geoTag
          - healthyRecords
          - serviceHealth
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
