---
apiVersion: v1
kind: Service
metadata:
  name: "yb-masters"
  labels:
    app: "yb-master"
    heritage: "Helm"
    release: "yugabyte"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "headless"
spec:
  clusterIP: None
  ports:
    - name: "http-ui"
      port: 7000
    - name: "tcp-rpc-port"
      port: 7100
  selector:
    app: "yb-master"


---
apiVersion: v1
kind: Service
metadata:
  name: "yb-master-ui"
  annotations:
    null
  labels:
    app: "yb-master"
    heritage: "Helm"
    release: "yugabyte"
    chart: "yugabyte"
    component: "yugabytedb"
spec:
  
  
  ports:
    - name: "http-ui"
      port: 7000
  selector:
    app: "yb-master"
  type: LoadBalancer


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "yb-master"
  namespace: "yugabyte"
  labels:
    app: "yb-master"
    heritage: "Helm"
    release: "yugabyte"
    chart: "yugabyte"
    component: "yugabytedb"
spec:
  serviceName: "yb-masters"
  podManagementPolicy: Parallel
  
  replicas: 3
  
  volumeClaimTemplates:
    - metadata:
        name: datadir0
        annotations:
          volume.beta.kubernetes.io/storage-class: gp2
        labels:
          heritage: "Helm"
          release: "yugabyte"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        storageClassName: gp2
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: datadir1
        annotations:
          volume.beta.kubernetes.io/storage-class: gp2
        labels:
          heritage: "Helm"
          release: "yugabyte"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        storageClassName: gp2
        resources:
          requests:
            storage: 10Gi
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      
      partition: 0
      
  selector:
    matchLabels:
      app: "yb-master"
  template:
    metadata:
      
      labels:
        app: "yb-master"
        heritage: "Helm"
        release: "yugabyte"
        chart: "yugabyte"
        component: "yugabytedb"
    spec:
      affinity:
        # Set the anti-affinity selector scope to YB masters.
        
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - "yb-master"
              topologyKey: failure-domain.beta.kubernetes.io/zone
      initContainers:
      - name: "topology-discovery"
        image: registry.redhat.io/openshift4/ose-cli:latest
        volumeMounts:
        - name: topology-conf
          mountPath: /topology-conf
        env: 
        - name: NODE
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        command:
        - bash
        - -c
        - | 
          echo export region=$(oc get node ${NODE} -o jsonpath='{.metadata.labels.failure-domain\.beta\.kubernetes\.io/region}') >> /topology-conf/topology.conf && \
          echo export zone=$(oc get node ${NODE} -o jsonpath='{.metadata.labels.failure-domain\.beta\.kubernetes\.io/zone}') >> /topology-conf/topology.conf && \
          cat /topology-conf/topology.conf
      - name: "certs-config"
        image: registry.redhat.io/openshift4/ose-cli:latest
        volumeMounts:
        - name: certs
          mountPath: /certsenv: 
        - name: NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace              
        command:
        - bash
        - -c
        - |
          export ordinal="${NAME##*- }" 
          cp /cert-${ordinal}/tls.key /certs/node.${NAME}.yb-masters.${NAMESPACE}.svc.cluster.local.key
          cp /cert-${ordinal}/tls.crt /certs/node.${NAME}.yb-masters.${NAMESPACE}.svc.cluster.local.crt
          cp /cert-${ordinal}/ca.crt /certs/ca.crt                     
      containers:
      - name: "yb-master"
        image: "yugabytedb/yugabyte:2.3.3.0-b106"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
                - "sh"
                - "-c"
                - >
                  mkdir -p /mnt/disk0/cores;
                  mkdir -p /mnt/disk0/yb-data/scripts;
                  if [ ! -f /mnt/disk0/yb-data/scripts/log_cleanup.sh ]; then
                    if [ -f /home/yugabyte/bin/log_cleanup.sh ]; then
                      cp /home/yugabyte/bin/log_cleanup.sh /mnt/disk0/yb-data/scripts;
                    fi;
                  fi
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
        
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 0.2
            memory: 500Mi
        
        # core dumps are collected to workingDir if
        # kernel.core_pattern is set to a relative path like
        # core.%e.%p.%t ref:
        # https://github.com/yugabyte/charts/issues/11
        workingDir: "/mnt/disk0/cores"
        command:
          - bash
          - -v
          - -c
          - >
            source /topology-conf/topology.conf &&
            /home/yugabyte/bin/yb-master
            --fs_data_dirs=/mnt/disk0,/mnt/disk1
            --rpc_bind_addresses=$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.local
            --server_broadcast_addresses=$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.local:7100
            --webserver_interface=0.0.0.0
            --master_addresses=yb-master-0.yb-masters.yugabyte.svc.cluster.local:7100,yb-master-1.yb-masters.yugabyte.svc.cluster.local:7100,yb-master-2.yb-masters.yugabyte.svc.cluster.local:7100
            --replication_factor=3
            --enable_ysql=true
            --metric_node_name=$(HOSTNAME)
            --memory_limit_hard_bytes=1824522240
            --stderrthreshold=0
            --num_cpus=1
            --undefok=num_cpus,enable_ysql
            --placement_cloud=aws
            --placement_region=${region}
            --placement_zone=${zone}
            --certs_dir=/opt/certs/yugabyte
            --use_node_to_node_encryption=true
            --allow_insecure_connections=false
        
        ports:
          - containerPort: 7000
            name: "http-ui"
          - containerPort: 7100
            name: "tcp-rpc-port"
        volumeMounts:
          - name: topology-conf
            mountPath: /topology-conf
          
          - name: datadir0
            mountPath: /mnt/disk0
          - name: datadir1
            mountPath: /mnt/disk1
          - name: certs
            mountPath: /opt/certs/yugabyte
            readOnly: true
          - name: yugabyte-tls-client-cert
            mountPath: /root/.yugabytedb/
            readOnly: true

      
      - name: yb-cleanup
        image: busybox:1.31
        env:
        - name: USER
          value: "yugabyte"
        command:
          - "/bin/sh"
          - "-c"
          - >
            mkdir /var/spool/cron;
            mkdir /var/spool/cron/crontabs;
            echo "0 * * * * /home/yugabyte/scripts/log_cleanup.sh" | tee -a /var/spool/cron/crontabs/root;
            crond;
            while true; do
              sleep 86400;
            done
        volumeMounts:
          - name: datadir0
            mountPath: /home/yugabyte/
            subPath: yb-data

      volumes:
        
        - name: datadir0
          hostPath:
            path: /mnt/disks/ssd0
        - name: datadir1
          hostPath:
            path: /mnt/disks/ssd1- name: certs
          emptyDir: {}
        - name: yugabyte-tls-client-cert
          secret:
            secretName: yugabyte-tls-client-cert
            defaultMode: 256
        - name: topology-conf
          emptyDir: {}
        - name: certs
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: "yb-tservers"
  labels:
    app: "yb-tserver"
    heritage: "Helm"
    release: "yugabyte"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "headless"
spec:
  clusterIP: None
  ports:
    - name: "http-ui"
      port: 9000
    - name: "http-ycql-met"
      port: 12000
    - name: "http-yedis-met"
      port: 11000
    - name: "http-ysql-met"
      port: 13000
    - name: "tcp-rpc-port"
      port: 9100
    - name: "tcp-yedis-port"
      port: 6379
    - name: "tcp-yql-port"
      port: 9042
    - name: "tcp-ysql-port"
      port: 5433
  selector:
    app: "yb-tserver"


---
apiVersion: v1
kind: Service
metadata:
  name: "yb-tserver-service"
  annotations:
    null
